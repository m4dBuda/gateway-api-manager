// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model customer {
  id           String           @id @default(uuid())
  name         String?
  cpf          String?
  phone        String?
  email        String?
  userImageUrl String?
  status       customer_status?
  address      address?         @relation(fields: [addressId], references: [id])
  addressId    String?
  created_at   DateTime         @default(now())
  updated_at   DateTime?        @updatedAt
}

model seller {
  id            String          @id @default(uuid())
  businessName  String?
  tradeName     String?
  cnpj          String?
  phone         String?
  email         String?
  brandImageUrl String?
  status        seller_status?
  address       address?        @relation(fields: [addressId], references: [id])
  addressId     String?
  created_at    DateTime        @default(now())
  updated_at    DateTime?       @updatedAt
  sellerCatalog sellerCatalog[]
  products      products[]
}

model address {
  id           String     @id @default(uuid())
  street       String?
  number       String?
  neighborhood String?
  city         String?
  state        String?
  country      String?
  zipCode      String?
  complement   String?
  seller       seller[]
  customer     customer[]
  created_at   DateTime   @default(now())
  updated_at   DateTime?  @updatedAt
}

model sellerCatalog {
  id              String     @id @default(uuid())
  name            String?
  description     String?
  catalogImageUrl String?
  sellerId        String
  seller          seller     @relation(fields: [sellerId], references: [id])
  products        products[]
  created_at      DateTime   @default(now())
  updated_at      DateTime?  @updatedAt
}

model products {
  id              String          @id @default(uuid())
  name            String?
  description     String?
  productImageUrl String?
  price           String?
  quantity        String?
  seller          seller[]
  sellerCatalog   sellerCatalog[]
  created_at      DateTime        @default(now())
  updated_at      DateTime?       @updatedAt
}

enum customer_status {
  PENDING_DOCUMENTS
  PENDING_PAYMENT_METHOD
  APPROVED
  BLOCKED
  WAITING
}

enum seller_status {
  PENDING_DOCUMENTS
  APPROVED
  BLOCKED
  WAITING
}

enum seller_user_status {
  PENDING_DOCUMENTS
  BANNED
  APPROVED
  BLOCKED
  WAITING
}
